	function [R1n,R2n,C1n,C2n,R1,R2,C1,C2] = S_AND_K_LPF(C1n,C2n,won,Q,u,Wn,zn,nC1)	%	Beregner modstande (normeret og denormeret) og kondensatorer (denormeret)	%	i et 2. ordens Sallen and Key lavpasfilter.	%	Beregningerne er baseret paa valg af de 2 normerede kondensatorer	%	og DC-forstaerkningen, og med den oenskede won, Q, Wn og zn.	% 	Vaelges der en kombination af kondensatorer som ikke har en loesning,	%	foroeges C1n med 1F, og det sker maks. nC1 gange.	%	Der kan saa vaelges en kombination af C1n og C2n der passer med standardvaerdier,	%	og beregningen foretages en gang mere.	%	Findes ingen loesning efter nC1 gennemregninger tildeles alle komponenter	%	vaerdien '-'.	%	Outputformat: [R1n,R2n,C1n,C2n,R1,R2,C1,C2]	%	Input: S_AND_K_LPF(C1n,C2n,won,Q,u,Wn,zn,nC1)	%	Wn= frekvensdenormering. zn= impedansdenormering	%	sl@tek.sdu.dk	%		clear S_AND_K_LPF;	syms R1n R2n R1 R2;	real=0;	n=1;	while n<= nC1 && real==0		f1=won^2-1/R1n/R2n/C1n/C2n;		f2=won/Q-1/R1n/C1n-1/R2n/C1n-1/R2n/C2n+u/R2n/C2n;		RES=solve(f1,f2);		real=isreal(RES.R1n) && isreal(RES.R2n);		if real==1			R1n=vpa(RES.R1n,7);			R2n=vpa(RES.R2n,7);			C1n=vpa(C1n,7);			C2n=vpa(C2n,7);			R1=vpa(RES.R1n*zn,7);			R2=vpa(RES.R2n*zn,7);			C1=vpa(C1n/zn/Wn,7);			C2=vpa(C2n/zn/Wn,7);		else			n=n+1;			C1n=C1n+1;		end;	end	if real==0		R1n='-';		R2n='-';		C1n='-';		C2n='-';		R1='-';		R2='-';		C1='-';		C2='-';	end;			